//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//
package gerbera.fdsnws.datamodel;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;

/**
 * Representation of floating-point numbers used as measurements.
 *
 * <p>
 * Java class for FloatType complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="FloatType"&gt;
 *   &lt;simpleContent&gt;
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;double"&gt;
 *       &lt;attGroup ref="{http://www.fdsn.org/xml/station/1}uncertaintyDouble"/&gt;
 *       &lt;attribute name="unit" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FloatType", propOrder = {
	"value"
})
@XmlSeeAlso({
	gerbera.fdsnws.datamodel.ChannelType.ClockDrift.class,
	SecondType.class,
	VoltageType.class,
	AngleType.class,
	LatitudeBaseType.class,
	LongitudeBaseType.class,
	AzimuthType.class,
	DipType.class,
	DistanceType.class,
	FrequencyType.class,
	SampleRateType.class
})
public class FloatType {

	@XmlValue
	protected double value;
	@XmlAttribute(name = "unit")
	protected String unit;
	@XmlAttribute(name = "plusError")
	protected Double plusError;
	@XmlAttribute(name = "minusError")
	protected Double minusError;
	@XmlAttribute(name = "measurementMethod")
	protected String measurementMethod;

	/**
	 * Gets the value of the value property.
	 *
	 */
	public double getValue() {
		return value;
	}

	/**
	 * Sets the value of the value property.
	 *
	 */
	public void setValue(double value) {
		this.value = value;
	}

	/**
	 * Gets the value of the unit property.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getUnit() {
		return unit;
	}

	/**
	 * Sets the value of the unit property.
	 *
	 * @param value allowed object is {@link String }
	 *
	 */
	public void setUnit(String value) {
		this.unit = value;
	}

	/**
	 * Gets the value of the plusError property.
	 *
	 * @return possible object is {@link Double }
	 *
	 */
	public Double getPlusError() {
		return plusError;
	}

	/**
	 * Sets the value of the plusError property.
	 *
	 * @param value allowed object is {@link Double }
	 *
	 */
	public void setPlusError(Double value) {
		this.plusError = value;
	}

	/**
	 * Gets the value of the minusError property.
	 *
	 * @return possible object is {@link Double }
	 *
	 */
	public Double getMinusError() {
		return minusError;
	}

	/**
	 * Sets the value of the minusError property.
	 *
	 * @param value allowed object is {@link Double }
	 *
	 */
	public void setMinusError(Double value) {
		this.minusError = value;
	}

	/**
	 * Gets the value of the measurementMethod property.
	 *
	 * @return possible object is {@link String }
	 *
	 */
	public String getMeasurementMethod() {
		return measurementMethod;
	}

	/**
	 * Sets the value of the measurementMethod property.
	 *
	 * @param value allowed object is {@link String }
	 *
	 */
	public void setMeasurementMethod(String value) {
		this.measurementMethod = value;
	}

}
